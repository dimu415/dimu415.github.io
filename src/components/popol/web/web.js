export const webs=[
    {
        name:'DecaChart',
        url:"https://decacharts.com/",
        appicon:'/deca/appicon.png',
        unnamed:'/deca/unnamed.png',
        graph:['/deca/graph1.png','/deca/graph2.png'],
        tag:['Vue','Vuetify','반응형','aws','ec2','1인 개발','docker','route 53','로드 밸런서','nginx','git','CI/CD'],
        ex:[{title:'스마트한 기능',contant:'직관적인 UI와 반응형 디자인을 통해 모바일 웹브라우저에서 최적의 사용자 경험 제공으로 사용자가 순서도를 쉽게 그릴 수 있는 웹사이트 '},
            {title:'배포 및 인프라',contant:'Github Actions -> Docker-> AWS EC2와 로드밸랜서 를 통해 자동 배포 GoDaddy와 AWS Route 53을통한 도메인관리'},
        ],
        contant:`
        쉽고 간단한 조작으로 순서도를 시각화하여 보여주는 사이트
        `,
        main:[
        {
            'chapter':'프로젝트 개요',
            'contant':[`
        이 프로젝트는 Vue와 Vuetify를 사용하여 순서도를 쉽게 그릴 수 있는 웹사이트를 개발한 것입니다.
         간단한 코드 입력이나 버튼 클릭으로 직관적이고 간단한 조작을 통해 순서도를 시각화할 수 있습니다. 
         이 사이트는 반응형 디자인을 통해 모바일과 웹 버전 모두에서 원활하게 작동하며, 
        AI 기술을 도입하여 실험 논문을 분석해 실험 순서를 시각화하는 기능을 추가할 예정입니다.
        `
            ]
        },
        {
            'chapter':'직관적인 순서도 생성',
            'contant':['간편한 조작: 간단한 코드 입력이나 버튼 클릭으로 순서도를 손쉽게 생성할 수 있습니다.',
                '시각화 도구: 사용자들이 순서도를 시각적으로 확인하고 편집할 수 있도록 도와주는 다양한 도구를 제공합니다',
                '이미지 삽입: 순서도에 이미지를 추가하여 더 풍부한 표현이 가능하도록 지원합니다.'
            ]
        },
        {
            'chapter':'반응형 디자인',
            'contant':['모바일 및 웹 지원: 반응형 디자인을 통해 모바일 기기와 웹 브라우저에서 모두 최적의 사용자 경험을 제공합니다.',
            ]
        },
        {
            'chapter':'커스텀 파서 사용:',
            'contant':['규칙 기반 코드: 저희만의 규칙 코드를 사용하여 순서도를 생성하고 시각화할 수 있는 파서를 구현했습니다.',
                'AI 기술 도입 예정: 실험 논문을 입력하면 AI가 실험 순서를 코드로 변환하여 시각화할 수 있도록 하는 기능을 개발할 예정입니다.'
            ]
        },
        {
            'chapter':'배포 및 인프라:',
            'contant':['Docker: 애플리케이션을 Docker 컨테이너로 패키징하여 배포했습니다.',
                'GitHub Actions: CI/CD 파이프라인을 구축하여 코드 변경 시 자동으로 빌드하고 배포하도록 설정했습니다.',
                'AWS EC2: AWS EC2 인스턴스를 사용하여 애플리케이션을 호스팅했습니다.',
                '로드 밸런서: AWS 로드 밸런서를 사용하여 트래픽을 관리하고 HTTPS 접속을 가능하게 했습니다.',
                '도메인 관리: GoDaddy에서 도메인 네임을 구매하고, AWS Route 53을 통해 도메인을 등록하여 IP가 아닌 도메인 네임으로 접근할 수 있도록 했습니다.'
            ]
        },
    ],
    skills:{'프론트엔드': 'Vue, Vuetify','배포':' Docker, AWS EC2, AWS 로드 밸런서, GitHub Actions','도메인 관리': 'GoDaddy, AWS Route 53'},
    result:`
    순서도 그리기 사이트는 사용자들이 간단한 조작으로 순서도를 생성하고 편집할 수 있는 효율적인 도구를 제공하여 시간 소요를 줄이는 데 큰 도움을 주었습니다. 
    반응형 디자인 덕분에 다양한 기기에서 원활한 사용이 가능하며, 
    AI 기술을 도입하여 더욱 지능적인 기능을 제공할 계획입니다.
     Docker와 GitHub Actions를 활용한 자동화된 배포 파이프라인을 통해 안정적인 운영 환경을 구축하고, 
     AWS 인프라를 통해 높은 가용성과 보안을 보장하였습니다. 
     이로써 사용자는 손쉽게 도메인 네임으로 사이트에 접속할 수 있게 되었습니다.

    `
},
{
    name:'blog',
    url:null,
    appicon:'/blog/appicon.png',
    unnamed:'/blog/unnamed.png',
    graph:['/blog/graph1.png','/blog/graph2.png'],
    tag:['Vue','Vuetify','python','flask','mongodb','1인 개발'],
    ex:[{title:'블로그 기능',contant:'게시글 작성 및 수정, 댓글 및 답글 기능, 카테고리 및 태그 관리, 검색 기능, 이미지 및 파일 업로드.'},
        {title:'UI',contant:'Vuetify로 반응형 디자인과 미려한 UI 구현.'},
        {title:'백엔드 기술 및 데이터 관리',contant:'fLASK로 간단하고 유연한 로직 구현,MongoDb로 데이터 관리 Flask와의 통합으로 CRUD 작업 수행'},
    ],
    contant:`
    나만을 위한 블로그
    `,
    main:[
    {
        'chapter':'프로젝트 개요',
        'contant':[`
   이 프로젝트는 Vue와 Vuetify를 사용하여 직관적이고 사용자 친화적인 블로그를 제작한 것입니다. 
   백엔드는 Flask와 Python을 사용하여 구현하였고, 
   MongoDB를 통해 데이터 관리를 수행하였습니다. 
   이 블로그는 일반적인 블로그 기능을 모두 포함하고 있습니다.
    `
        ]
    },
    {
        'chapter':'블로그 기능',
        'contant':['게시글 작성 및 수정: 사용자가 손쉽게 게시글을 작성하고 수정할 수 있는 기능을 제공했습니다.',
            '댓글 및 답글: 게시글에 대한 댓글과 답글을 달 수 있는 기능을 구현하여 사용자 간의 상호작용을 촉진했습니다.',
            '카테고리 및 태그 관리: 게시글을 카테고리와 태그로 분류하여 체계적으로 관리할 수 있습니다.',
            '검색 기능: 사용자가 키워드로 게시글을 검색할 수 있는 기능을 제공했습니다.',
            '이미지 및 파일 업로드: 게시글 작성 시 이미지를 첨부할 수 있는 기능을 추가하여 시각적인 표현을 강화했습니다.'
        ]
    },
    {
        'chapter':'프론트엔드 기술',
        'contant':['Vue.js: 사용자 인터페이스를 구축하는 데 사용된 프레임워크로, 컴포넌트 기반 아키텍처를 통해 코드 재사용성과 유지보수성을 높였습니다.',
            'Vuetify: Vue를 위한 UI 라이브러리로, 반응형 디자인과 미려한 UI 컴포넌트를 통해 사용자 경험을 향상시켰습니다.'
        ]
    },
    {
        'chapter':'백엔드 기술',
        'contant':['Flask: Python 기반의 마이크로 웹 프레임워크로, 간단하고 유연하게 서버 측 로직을 구현했습니다.',
         
        ]
    },
    {
        'chapter':'데이터 관리',
        'contant':['MongoDB: 게시글, 사용자 정보, 댓글 등을 MongoDB를 통해 관리하여 데이터의 저장과 검색을 효율적으로 처리했습니다.',
            'Flask와의 통합: Flask를 통해 MongoDB와 통신하여 데이터의 생성, 읽기, 수정, 삭제(CRUD) 작업을 수행했습니다.',
        ]
    },
],
skills:{'프론트엔드': 'Vue, Vuetify','백엔드': 'Flask, Python','데이터베이스': 'MongoDB'},
result:`
이 블로그 프로젝트는 사용자가 직관적이고 효율적으로 사용할 수 있는 다양한 기능을 제공하여 만족도를 높였습니다.
 Vue와 Vuetify를 사용한 프론트엔드는 사용자 친화적인 인터페이스를 제공하였으며,
  Flask와 MongoDB를 통한 백엔드는 데이터의 안정적이고 유연한 관리가 가능하게 했습니다. 
  이로써 블로그 시스템은 안정적이고 확장 가능하며, 
사용자 요구에 맞게 지속적으로 발전할 수 있는 기반을 마련하였습니다.

`
}
    

]